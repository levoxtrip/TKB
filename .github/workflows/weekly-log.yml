name: Weekly Markdown Log

on:
  push:
    branches:
      - main  # Adjust this if your main branch is named differently
  schedule:
    - cron: '0 12 * * 5'  # Run every Friday at 12:00 PM (UTC)

jobs:
  create-log:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Use the latest Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install pyyaml markdown

      # Step 4: Get files created in the last week
      - name: Get new files from last week
        id: new_files
        run: |
          # Get the list of files added in the last 7 days (or from last commit on push)
          last_week_files=$(git log --since="7 days ago" --pretty="" --name-only --diff-filter=A -- docs/*.md | sort | uniq)
          
          # Replace newlines with space to format the list correctly
          formatted_files=$(echo "$last_week_files" | tr '\n' ' ')
          
          # Set the formatted files as an environment variable
          echo "new_markdown_files=$formatted_files" >> $GITHUB_ENV

      # Step 5: Extract information from new Markdown files
      - name: Extract information and create log
        run: |
          import os
          import re
          from datetime import datetime
          from urllib.parse import urljoin

          # Get the list of newly created Markdown files from the environment variable
          markdown_files = os.getenv('new_markdown_files', '').split()

          # Base URL of your GitHub repository
          repo_url = 'https://github.com/<user>/<repo>/blob/main/'

          # Create a new log file or overwrite existing one
          log_file = 'log.md'
          with open(log_file, 'w', encoding='utf-8') as log:
              log.write(f'# Weekly Log - {datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S")} UTC\n\n')
              log.write('List of newly created Markdown files in the last week:\n\n')

              # Extract and log information from each file
              for file in markdown_files:
                  if not os.path.exists(file):
                      continue

                  with open(file, 'r', encoding='utf-8') as f:
                      content = f.read()

                      # Extract the first headline (first line starting with #)
                      headline_match = re.search(r'^(# .+)', content, re.MULTILINE)
                      headline = headline_match.group(1) if headline_match else 'No headline found'

                      # Extract the first image link (Markdown image syntax ![alt](link))
                      image_match = re.search(r'!\[.*?\]\((.*?)\)', content)
                      image_link = image_match.group(1) if image_match else 'No image found'

                      # Create a link to the file in the GitHub repo
                      file_url = urljoin(repo_url, file)

                      # Write extracted information to the log
                      log.write(f'- **[{file}]({file_url})**\n')
                      log.write(f'  - Headline: {headline}\n')
                      log.write(f'  - First image: ![]({image_link})\n\n')

      # Step 6: Commit and push the log file
      - name: Commit and Push Log File
        run: |
          git config --local user.name "levoxtrip"
          git config --local user.email "levoxtrip@gmail.com"
          git add log.md
          git commit -m "Weekly log update - $(date -u)"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
