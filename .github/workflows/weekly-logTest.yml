name: Generate and Process New Markdown Files on Push

on:
  push:
    branches:
      - main  # Replace with your target branch
    paths-ignore:
      - 'newsletter.md'  # Prevent the action from re-triggering when the newsletter is committed

jobs:
  process-markdown:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history is available

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install coreutils (for date command with ISO format)
        run: |
          sudo apt-get update && sudo apt-get install -y coreutils

      - name: Gather newly added markdown files
        id: gather_files
        run: |
          # Get the date and time for one week ago in ISO 8601 format
          one_week_ago=$(date -d "7 days ago" --iso-8601=seconds)

          # Initialize an array to hold new files
          new_files=()

          # Get a list of all .md files currently tracked by Git
          all_md_files=$(git ls-files '*.md')

          # Loop over each .md file
          for file in $all_md_files; do
              # Get the first commit date of the file in ISO 8601 format
              first_commit_date=$(git log --diff-filter=A --follow --format="%aI" -- "$file" | tail -1)

              # If the first commit date is after one week ago, add the file to the list
              if [[ "$first_commit_date" > "$one_week_ago" ]]; then
                  new_files+=("$file")
              fi
          done

          # Export the list of new files as an environment variable, space-separated
          if [ ${#new_files[@]} -eq 0 ]; then
              echo "NEW_MARKDOWN_FILES=none" >> $GITHUB_ENV
          else
              echo "NEW_MARKDOWN_FILES=${new_files[*]}" >> $GITHUB_ENV
          fi

      - name: Run Python script to process new markdown files
        run: |
          python create-log.py
